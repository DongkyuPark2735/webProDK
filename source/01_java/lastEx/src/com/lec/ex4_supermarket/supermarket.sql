-- 테이블 삭제 
DROP TABLE CUSLEVEL;
DROP TABLE CUSTOMER; -- 하위 테이블 먼저 삭제 
-- DROP TABLE CUS_LEVEL CASCADE CONSTRAINTS; -- 지양, 참조 무시하고 삭제 
DROP SEQUENCE CUSTOMER_SQ;

-- 테이블 생성 
CREATE TABLE CUSLEVEL(
    LEVELNO NUMBER(1,0) PRIMARY KEY,
    LEVELNAME VARCHAR(20) NOT NULL,
    LOW NUMBER(9,0) NOT NULL,
    HIGH NUMBER(9,0) NOT NULL
);
SELECT * FROM CUSLEVEL;
CREATE TABLE CUSTOMER(
    CUSID NUMBER(6) PRIMARY KEY,
    CUSNAME VARCHAR2(20) NOT NULL,
    CUSTEL VARCHAR(20) NOT NULL UNIQUE, -- 전화번호는 반드시 VARCHAR2 0이 날라가기때문
    CUSPOINT NUMBER(9) DEFAULT 1000, 
    CUSAMOUNT NUMBER(9) DEFAULT 0,
    LEVELNO  NUMBER(1,0) DEFAULT 1,
    FOREIGN KEY(LEVELNO) REFERENCES CUSLEVEL(LEVELNO)
);

CREATE SEQUENCE CUSTOMER_SQ
    MAXVALUE 999999
    NOCACHE
    NOCYCLE;

SELECT * FROM CUSTOMER;

INSERT INTO CUSLEVEL VALUES(1, 'BRONZE', 0,999999);
INSERT INTO CUSLEVEL VALUES(2, 'SILVER', 1000000,1999999);
INSERT INTO CUSLEVEL VALUES(3, 'GOLD', 2000000,2999999);
INSERT INTO CUSLEVEL VALUES(4, 'DIAMOND', 3000000,3999999);
INSERT INTO CUSLEVEL VALUES(5, 'VVIP', 4000000,999999999);

--INSERT INTO CUSTOMER VALUES((TO_CHAR(SYSDATE,'YYYY')||TRIM(TO_CHAR(CUSTOMER_SQ.NEXTVAL, '0000'))), '홍길동','010-9999-9999'
--                                         ,10000, 1000000, 1);
--INSERT INTO CUSTOMER VALUES((TO_CHAR(SYSDATE,'YYYY')||TRIM(TO_CHAR(CUSTOMER_SQ.NEXTVAL, '0000'))), '이길동','010-9786-9559'
--                                         ,20000, 3000000, 3);
--INSERT INTO CUSTOMER VALUES((TO_CHAR(SYSDATE,'YYYY')||TRIM(TO_CHAR(CUSTOMER_SQ.NEXTVAL, '0000'))), '김길동','010-9719-9111'
--                                         ,30000, 4000000, 4);

INSERT INTO CUSTOMER (CUSID, CUSNAME, CUSTEL) VALUES (CUSTOMER_SQ.NEXTVAL,  '홍길동','010-9999-9999');
INSERT INTO CUSTOMER VALUES (CUSTOMER_SQ.NEXTVAL,  '박길동','010-8888-9999', 0 ,4000000 , 5);
INSERT INTO CUSTOMER VALUES (CUSTOMER_SQ.NEXTVAL, '신길동','010-7777-7777' , 0 ,100000 , 1);


SELECT * FROM CUSTOMER;
-- 0. 레벨 이름들 검색 : Vector<String> getLevelNames()
SELECT LEVELNAME FROM CUSLEVEL;
-- 1. 아이디 검색 : CustomerDTO cidGetCustomer( int )
    -- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
(SELECT CUSID FROM CUSTOMER  WHERE CUSID = 99);
SELECT CUSID, CUSTEL, CUSNAME, CUSPOINT, CUSAMOUNT, LEVELNAME,
        (SELECT HIGH +1 - CUSAMOUNT FROM CUSTOMER WHERE CUSID = C.CUSID AND LEVELNO != 5)  forLevelUp
    FROM CUSTOMER C, CUSLEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CUSID = 1;
-- 2. 폰4자리 검색 : ArrayList<CustomerDTO> cTelGetCustomer(String cTel);
    -- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
SELECT CUSID, CUSTEL, CUSNAME, CUSPOINT, CUSAMOUNT, LEVELNAME,
        (SELECT HIGH +1 - CUSAMOUNT FROM CUSTOMER WHERE CUSID = C.CUSID AND LEVELNO != 5)  forLevelUp
    FROM CUSTOMER C, CUSLEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CUSTEL LIKE '%'||'9999';
-- 3. 고객 이름 검색 :  ArrayList<CustomerDTO> cNameGetCustomer(String cName);
    -- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
SELECT CUSID, CUSTEL, CUSNAME, CUSPOINT, CUSAMOUNT, LEVELNAME,
        (SELECT HIGH +1 - CUSAMOUNT FROM CUSTOMER WHERE CUSID = C.CUSID AND LEVELNO != 5)  forLevelUp
    FROM CUSTOMER C, CUSLEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CUSNAME = '홍길동' ORDER BY CUSAMOUNT DESC;
-- 4. 포인트로만 구매 : Int buyWithPoint(int cId, int cAmoint) (1번 ID가 100원 구매)
    -- 
UPDATE CUSTOMER SET CUSPOINT = CUSPOINT - 100 WHERE CUSID = 1  ;
UPDATE CUSTOMER SET CUSPOINT = CUSPOINT +300000 WHERE CUSID = 3  ;

COMMIT;
-- 5. 물품 구매 : int buy(int cId, int cAmount ) 
    -- 물품구매 update에는 cpoint, cAmount, levelNo가 수정 되어야함 
    -- 5-1 CUSPOINT, CUSAMOUNT 변경
UPDATE CUSTOMER SET CUSPOINT = CUSPOINT + (1000000*0.05), CUSAMOUNT = CUSAMOUNT + 1000000 WHERE CUSID = 1  ;
SELECT * FROM EMP;

SELECT * FROM CUSTOMER;
    -- 5-2 LEVELNO 변경하기 전 현 레벨번호와 수정될 레벨 번호
SELECT CUSID, CUSNAME,CUSAMOUNT, C.LEVELNO , L.LEVELNO 
    FROM CUSTOMER C, CUSLEVEL L
    WHERE CUSAMOUNT BETWEEN LOW AND HIGH AND CUSID = 1;
    -- 5-3 LEVELNO
UPDATE CUSTOMER SET LEVELNO = (
SELECT L.LEVELNO 수정할레벨 
    FROM CUSTOMER C, CUSLEVEL L
    WHERE CUSAMOUNT BETWEEN LOW AND HIGH AND CUSID = 1)
    WHERE CUSID = 1;
    -- 5-1과 5-3을 한문장에 
UPDATE CUSTOMER SET CUSPOINT = CUSPOINT + (1000000*0.05), CUSAMOUNT = CUSAMOUNT + 1000000,
    LEVELNO = (SELECT L.LEVELNO 수정할레벨 
                     FROM CUSTOMER C, CUSLEVEL L
                     WHERE CUSAMOUNT+1000000 BETWEEN LOW AND HIGH AND CUSID = 1)
                     WHERE CUSID = 1; -- DAO에 들어갈 쿼리  -- 바깥쪽 CUSID 없어도 될?
    
-- 6. 등급별 출력 : ArrayList<CustomerDTO> levelNameGetCustomer(String levelName) 
        -- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
SELECT CUSID, CUSTEL, CUSNAME, CUSPOINT, CUSAMOUNT, LEVELNAME,
        (SELECT HIGH +1 - CUSAMOUNT FROM CUSTOMER WHERE CUSID = C.CUSID AND LEVELNO != 5)  forLevelUp
    FROM CUSTOMER C, CUSLEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND LEVELNAME = 'BRONZE' ORDER BY CUSAMOUNT DESC;
-- 7. 전체 출력 : ArrayList<CustomerDTO>getCustomers() 
        -- CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, forLevelUp
SELECT CUSID, CUSTEL, CUSNAME, CUSPOINT, CUSAMOUNT, LEVELNAME,
        (SELECT HIGH +1 - CUSAMOUNT FROM CUSTOMER WHERE CUSID = C.CUSID AND LEVELNO != 5)  forLevelUp
    FROM CUSTOMER C, CUSLEVEL L
    WHERE C.LEVELNO = L.LEVELNO ORDER BY CUSAMOUNT DESC;
-- 8. 회원가입 : int insertCustomer(String cTel,Stirng cName)
                -- int insertCustomer(CustomerDTO dto)
INSERT INTO CUSTOMER(CUSID, CUSTEL, CUSNAME)
    VALUES (CUSTOMER_SQ.NEXTVAL, '010-6666-6666', '유길동');
    SELECT * FROM CUSTOMER;
-- 9. 번호 수정 : int updateCustomer(int cId, String cTel) 
 UPDATE CUSTOMER SET CUSTEL = '010-5555-5555' WHERE CUSID = 4;
-- 10. 회원 탈퇴 :  int deleteCustomer(String cTel)
DELETE FROM CUSTOMER WHERE CUSTEL = '010-5555-5555';
COMMIT;








-- 0. 레벨이름들 검색 : public Vector<String> getLevelNames()
-- 1. cId로 검색 : public CustomerDto cIdGetCustomer(int cId)
-- 2. 폰뒤4자리(FULL) 검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
-- public ArrayList<CustomerDto> cTelGetCustomers(String cTel);
-- 3. 고객이름검색 - CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을 위한 쓸 돈
-- public ArrayList<CustomerDto> cNameGetCustomers(String cName);
-- 4. 포인트로만 구매(1000원짜리를 포인트로만 구매) : public int buyWithPoint(int cAmount, int cId)
-- 5. 물품구매 (1000000원짜리를 구매할 경우. 포인트는 구매금액의 5%)
-- 물품구매시 UPDATE 2회 필요(구매누적금액 UPDATE와 LEVELNO UPDATE)
-- public int buy(int cAmount, int cId)
-- 6. 등급별출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
-- public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
-- 7.전체출력 - CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 레벨업을위한쓸돈
-- public ArrayList<CustomerDto> getCustomers()
-- 8. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
-- public int insertCustomer(String cTel, String cName)
-- 9. 번호수정 : public int updateCustomer(String cTel, int cId)
-- 10. 회원탈퇴 : public int deleteCustomer(String cTel

